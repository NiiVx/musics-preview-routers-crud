{"version":3,"sources":["services/userAPI.js","pages/Loading.jsx","pages/Login.jsx","services/searchAlbumsAPI.js","components/Header.js","pages/Search.jsx","services/musicsAPI.js","services/favoriteSongsAPI.js","components/MusicCard.js","pages/Album.jsx","pages/Favorites.jsx","pages/Profile.jsx","pages/ProfileEdit.jsx","pages/NotFound.jsx","components/Content.js","App.js","index.js"],"names":["USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","parse","getItem","createUser","name","email","image","description","updateUser","updatedUser","Loading","React","Component","Login","props","onButtonClick","a","setState","loading","state","history","button","push","onInputChange","target","value","length","this","className","htmlFor","type","id","placeholder","onChange","onClick","disabled","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","fetch","APIResponse","json","results","map","artistId","artistName","collectionId","collectionName","collectionPrice","artworkUrl100","releaseDate","trackCount","Header","userName","getUserName","to","Search","searchAlbum","inputSearch","albums","element","src","alt","getMusics","request","requestJson","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","getFavoriteSongs","addSong","song","removeSong","filter","s","trackId","MusicCard","handleFavoriteMusics","test","favorites","trackName","album","find","music","check","addFavoriteSong","removeFavoriteMusic","removeMusic","handleChange","event","checked","previewUrl","controls","kind","Album","getMusicFromApi","match","params","index","undefined","Favorites","filteredSongs","console","log","Profile","getUserFromApi","userInfo","ProfileEdit","getUsersFromApi","userFormChange","redirect","NotFound","Content","onLoginInputChange","inputName","buttonOn","onLoginButtonClick","musics","nameArtist","nameAlbum","exact","path","render","component","App","basename","process","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f11cf2e4.chunk.js","sourcesContent":["const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React from 'react';\n\nexport default class Loading extends React.Component {\n  render() {\n    return (\n      <div data-testid=\"page-loading\">\n        <p>Carregando...</p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Loading from './Loading';\nimport { createUser } from '../services/userAPI';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      button: true,\n      loading: false,\n    };\n  }\n\n  onButtonClick = async () => {\n    this.setState({ loading: true });\n    const { name } = this.state;\n    const { history } = this.props;\n    this.setState({\n      button: true,\n      name: '' });\n    await createUser({ name: `${name}` });\n    history.push('/search');\n  }\n\n  onInputChange = ({ target }) => {\n    const { name, value } = target;\n    const MIN = 3;\n    this.setState({\n      [name]: value,\n    }, () => {\n      if (value.length >= MIN) {\n        this.setState({ button: false });\n      }\n    });\n  }\n\n  render() {\n    const { name, button, loading } = this.state;\n    return (\n      <div className=\"login-page-container\" data-testid=\"page-login\">\n\n        {loading\n          ? <Loading />\n          : (\n            <>\n              <p className=\"login-logo\">\n                Page Login:\n              </p>\n              <div className=\"login-items-container\">\n                <form className=\"form-login-container\">\n                  <label htmlFor=\"page-login\">\n                    <input\n                      className=\"input-name-login-container\"\n                      type=\"text\"\n                      id=\"login\"\n                      data-testid=\"login-name-input\"\n                      placeholder=\"Write your name here\"\n                      name=\"name\"\n                      value={ name }\n                      onChange={ this.onInputChange }\n                    />\n                  </label>\n                  <button\n                    type=\"submit\"\n                    data-testid=\"login-submit-button\"\n                    onClick={ this.onButtonClick }\n                    disabled={ button }\n                  >\n                    Entrar\n                  </button>\n                </form>\n              </div>\n\n            </>)}\n      </div>);\n  }\n}\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default Login;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getUser } from '../services/userAPI';\nimport Loading from '../pages/Loading';\n\nexport default class Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: '',\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    this.getUserName();\n  }\n\n  componentWillUnmount() {\n    this.getUserName();\n  }\n\n  async getUserName() {\n    this.setState({ loading: true }, async () => {\n      const user = await getUser();\n      const { name } = user;\n      this.setState({ userName: name, loading: false });\n    });\n  }\n\n  render() {\n    const { userName, loading } = this.state;\n    return (\n      <header data-testid=\"header-component\" className=\"header-container\">\n        {loading\n          ? <Loading />\n          : (\n            <h1 data-testid=\"header-user-name\">{`User: ${userName}!`}</h1>\n          )}\n        <nav>\n          <Link to=\"/search\" data-testid=\"link-to-search\">   -- Search  --  </Link>\n          <Link to=\"/favorites\" data-testid=\"link-to-favorites\"> Favorites-- </Link>\n          <Link to=\"/profile\" data-testid=\"link-to-profile\"> --Profile-- </Link>\n        </nav>\n      </header>\n    );\n  }\n}\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport Loading from './Loading';\nimport Header from '../components/Header';\n\nexport default class Search extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      button: true,\n      inputSearch: '',\n      loading: false,\n      results: '',\n      albums: [],\n    };\n  }\n\n  searchAlbum = () => {\n    const { inputSearch } = this.state;\n    this.setState({\n      results: inputSearch, inputSearch: '', loading: true },\n    async () => {\n      const response = await searchAlbumsAPI(inputSearch);\n      this.setState({\n        albums: [...response],\n        loading: false,\n        button: true,\n      });\n    });\n  }\n\n  onInputChange = ({ target }) => {\n    const { name, value } = target;\n    const MIN = 2;\n    this.setState({\n      [name]: value,\n    }, () => {\n      if (value.length >= MIN) {\n        this.setState({ button: false });\n      }\n    });\n  }\n\n  render() {\n    const {\n      inputSearch,\n      button,\n      albums,\n      loading,\n      results,\n    } = this.state;\n    return (\n      <div data-testid=\"page-search\" className=\"login-page-container\">\n        <Header />\n        {loading ? (\n          <Loading />\n        ) : (\n          <div>\n            {albums.length > 0 ? (\n              <p>{`Resultado de álbuns de: ${results}`}</p>\n            ) : (\n              <p>Nenhum álbum foi encontrado</p>\n            )}\n            <form>\n              <input\n                type=\"text\"\n                id=\"search\"\n                data-testid=\"search-artist-input\"\n                placeholder=\"Digite o nome da banda ou artista a ser pesquisada.\"\n                name=\"inputSearch\"\n                value={ inputSearch }\n                onChange={ this.onInputChange }\n              />\n              <button\n                type=\"submit\"\n                data-testid=\"search-artist-button\"\n                onClick={ this.searchAlbum }\n                disabled={ button }\n              >\n                Pesquisar\n              </button>\n              {albums\n                .map((element) => (\n                  <div key={ element.collectionId }>\n                    <div>\n                      <h3>\n                        { element.artistName }\n                      </h3>\n                      <p>\n                        { element.collectionName }\n                      </p>\n                      <img src={ element.artworkUrl100 } alt={ element.collectionName } />\n\n                      <Link\n                        to={ `/album/${element.collectionId}` }\n                        data-testid={ `link-to-album-${element.collectionId}` }\n                      >\n                        <p>link para o album:</p>\n                      </Link>\n                    </div>\n                  </div>))}\n            </form>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nSearch.propTypes = {\n  albums: propTypes.arrayOf(),\n  searchAlbum: propTypes.func,\n  button: propTypes.bool,\n  loading: propTypes.bool,\n  onInputChange: propTypes.func,\n  inputSearch: propTypes.string,\n}.isRequired;\n","const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React, { Component } from 'react';\nimport PropType from 'prop-types';\nimport { addSong, removeSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Loading from '../pages/Loading';\n\nexport default class MusicCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      check: false,\n      favorites: [],\n    };\n  }\n\n  componentDidMount() {\n    this.handleFavoriteMusics();\n  }\n\n  handleFavoriteMusics = async () => {\n    this.setState({ loading: true });\n    const test = await getFavoriteSongs();\n    this.setState({ loading: false, favorites: test });\n    const { favorites } = this.state;\n    const { album: { trackName } } = this.props;\n    const isFavorite = favorites.find((music) => (\n      music.trackName === trackName\n    ));\n    if (isFavorite) {\n      this.setState({ check: true });\n    }\n  }\n\n  addFavoriteSong = async () => {\n    this.setState({ loading: true });\n    const { album } = this.props;\n    await addSong(album);\n    this.setState({ loading: false, check: true });\n  }\n\n  removeFavoriteMusic = async () => {\n    const { album, removeMusic } = this.props;\n    this.setState({ loading: true });\n    await removeSong(album);\n    if (typeof removeMusic === 'function') removeMusic(album);\n    this.setState({ loading: false, check: false });\n  }\n\n  handleChange = (event) => {\n    const { target: { checked } } = event;\n    if (checked) {\n      this.addFavoriteSong();\n    } else {\n      this.removeFavoriteMusic();\n    }\n  }\n\n  render() {\n    const { album: { trackName, previewUrl, trackId } } = this.props;\n    const { loading, check } = this.state;\n    return (\n      <div>\n        {loading\n          ? <Loading />\n          : (\n            <section>\n              <h4>{trackName}</h4>\n              <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n                <track kind=\"captions\" />\n              </audio>\n              <label htmlFor=\"favorites\">\n                Favorita\n                <input\n                  id=\"favorites\"\n                  type=\"checkbox\"\n                  checked={ check }\n                  data-testid={ `checkbox-music-${trackId}` }\n                  onChange={\n                    (event) => { this.handleChange(event); }\n                  }\n                />\n              </label>\n            </section>\n          )}\n      </div>\n\n    );\n  }\n}\nMusicCard.propTypes = {\n  album: PropType.shape({\n    trackName: PropType.string,\n    previewUrl: PropType.string,\n    trackId: PropType.number,\n  }),\n}.isRequired;\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport Loading from './Loading';\nimport MusicCard from '../components/MusicCard';\n\nclass Album extends Component {\n  constructor() {\n    super();\n    this.state = {\n      albums: [],\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    this.getMusicFromApi();\n  }\n\n  componentWillUnmount() {\n    this.getMusicFromApi();\n  }\n\n  getMusicFromApi = () => {\n    const { match } = this.props;\n    const { id } = match.params;\n    this.setState({ loading: true }, async () => {\n      const request = await getMusics(id);\n      this.setState({ albums: [...request], loading: false });\n    });\n  }\n\n  render() {\n    const { loading, albums } = this.state;\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        {albums.length === 0 || loading ? <Loading /> : (\n          <section>\n            <p data-testid=\"artist-name\">{albums[0].artistName}</p>\n            <p data-testid=\"album-name\">{albums[0].collectionName}</p>\n            {albums.map((album, index) => (\n              <section\n                key={ index }\n              >\n                { album.trackName !== undefined && (\n                  <MusicCard\n                    trackName={ album.trackName }\n                    previewUrl={ album.previewUrl }\n                    trackId={ album.trackId }\n                    album={ album }\n                  />\n                )}\n              </section>))}\n          </section>\n        )}\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = ({\n  collectionId: propTypes.string,\n}).isRequired;\n\nexport default Album;\n","import React from 'react';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport Loading from './Loading';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\n\nexport default class Favorites extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      favorites: [],\n    };\n  }\n\n  componentDidMount() {\n    this.handleFavoriteMusics();\n  }\n\n  removeMusic = (album) => {\n    this.setState({ loading: true });\n    const { favorites } = this.state;\n    const filteredSongs = favorites.filter((music) => music !== album);\n    this.setState({ favorites: filteredSongs, loading: false });\n  }\n\n  handleFavoriteMusics = async () => {\n    this.setState({ loading: true });\n    const test = await getFavoriteSongs();\n    console.log(test);\n    this.setState({ loading: false, favorites: test });\n  }\n\n  render() {\n    const { loading, favorites } = this.state;\n    console.log(favorites);\n    return (\n      <div data-testid=\"page-favorites\">\n        <Header />\n        { loading ? <Loading /> : (\n          <section>\n            {favorites.map((album, index) => (\n              <section\n                key={ index }\n              >\n                { album.trackName !== undefined && (\n                  <MusicCard\n                    trackName={ album.trackName }\n                    previewUrl={ album.previewUrl }\n                    trackId={ album.trackId }\n                    album={ album }\n                    removeMusic={ this.removeMusic }\n                  />\n                )}\n              </section>))}\n          </section>\n        )}\n      </div>);\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { getUser } from '../services/userAPI';\nimport Loading from './Loading';\n\nclass Profile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userInfo: {},\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    this.getUserFromApi();\n  }\n\n  getUserFromApi = () => {\n    this.setState({ loading: true }, async () => {\n      const user = await getUser();\n      this.setState({ loading: false, userInfo: user });\n    });\n  }\n\n  render() {\n    const { loading, userInfo } = this.state;\n\n    return (\n      <div data-testid=\"page-profile\">\n        <Header />\n        {loading ? <Loading /> : (\n          <section>\n            <p>{userInfo.name}</p>\n            <p>{userInfo.email}</p>\n            <p>{userInfo.description}</p>\n            <img\n              data-testid=\"profile-image\"\n              src={ userInfo.image }\n              alt={ userInfo.image }\n            />\n            <Link to=\"/profile/edit\">Editar perfil</Link>\n          </section>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\nimport Header from '../components/Header';\nimport { getUser, updateUser } from '../services/userAPI';\nimport Loading from './Loading';\n\nclass ProfileEdit extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      name: '',\n      email: '',\n      description: '',\n      image: '',\n      check: true,\n      redirect: false,\n    };\n  }\n\n  componentDidMount() {\n    this.getUsersFromApi();\n  }\n\n  componentWillUnmount() {\n    this.getUsersFromApi();\n  }\n\n  getUsersFromApi = () => {\n    this.setState({ loading: true }, async () => {\n      const user = await getUser();\n      const { name, email, description, image } = user;\n      this.setState({ loading: false, name, email, description, image });\n      this.check();\n    });\n  }\n\n  userFormChange = ({ target }) => {\n    this.setState({\n      [target.name]: target.value,\n    }, () => {\n      this.check();\n    });\n  }\n\n  check = () => {\n    const { name, email, description, image } = this.state;\n    if (name !== ''\n    && email !== ''\n    && description !== ''\n    && image !== '') {\n      this.setState({ check: false });\n    } else {\n      this.setState({ check: true });\n    }\n  }\n\n  updateUser = () => {\n    this.setState({ loading: true }, async () => {\n      const { name, email, image, description } = this.state;\n      await updateUser({ name, email, image, description });\n      this.setState({ loading: false });\n    });\n    this.setState({ redirect: true });\n  }\n\n  render() {\n    const { loading, description, email, image, name, check, redirect } = this.state;\n    return (\n      <div data-testid=\"page-profile-edit\">\n        <Header />\n        {loading ? <Loading /> : (\n          <section>\n            <form>\n              <input\n                data-testid=\"edit-input-name\"\n                type=\"text\"\n                value={ name }\n                name=\"name\"\n                placeholder=\"Name\"\n                onChange={ this.userFormChange }\n              />\n              <input\n                type=\"email\"\n                data-testid=\"edit-input-email\"\n                value={ email }\n                name=\"email\"\n                placeholder=\"Email\"\n                onChange={ this.userFormChange }\n              />\n              <textarea\n                data-testid=\"edit-input-description\"\n                value={ description }\n                name=\"description\"\n                placeholder=\"About\"\n                onChange={ this.userFormChange }\n              />\n              <input\n                data-testid=\"edit-input-image\"\n                value={ image }\n                placeholder=\"User Image\"\n                name=\"image\"\n                onChange={ this.userFormChange }\n              />\n              <button\n                type=\"button\"\n                data-testid=\"edit-button-save\"\n                disabled={ check }\n                onClick={ this.updateUser }\n              >\n                salvar\n              </button>\n            </form>\n            <div>\n              { redirect && <Redirect to=\"/profile\" /> }\n            </div>\n          </section>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ProfileEdit;\n","import React from 'react';\n\nclass NotFound extends React.Component {\n  render() {\n    return (<div data-testid=\"page-not-found\">Home</div>);\n  }\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { createUser } from '../services/userAPI';\nimport Login from '../pages/Login';\nimport Search from '../pages/Search';\nimport Album from '../pages/Album';\nimport Favorites from '../pages/Favorites';\nimport Profile from '../pages/Profile';\nimport ProfileEdit from '../pages/ProfileEdit';\nimport NotFound from '../pages/NotFound';\n\nexport default class Content extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputName: '',\n      musics: [],\n      nameArtist: '',\n      nameAlbum: '',\n      buttonOn: true,\n      loading: false,\n      redirect: false,\n    };\n  }\n\n  onLoginInputChange = ({ target }) => {\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({\n      [target.name]: value,\n    }, () => {\n      const INPUT_LENGTH = 3;\n      const { inputName } = this.state;\n      if (inputName.length >= INPUT_LENGTH) {\n        this.setState({\n          buttonOn: false,\n        });\n      } else {\n        this.setState({\n          buttonOn: true,\n        });\n      }\n    });\n  }\n\n  onLoginButtonClick = () => {\n    const { inputName } = this.state;\n    this.setState({ loading: true }, async () => {\n      await createUser({ name: inputName });\n      this.setState({ loading: false, redirect: true });\n    });\n  }\n\n  render() {\n    const {\n      inputName,\n      musics,\n      nameAlbum,\n      nameArtist,\n      buttonOn, redirect, loading } = this.state;\n    return (\n      <main>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={ (props) => (<Login\n              { ...props }\n              buttonOn={ buttonOn }\n              inputName={ inputName }\n              onLoginInputChange={ this.onLoginInputChange }\n              onLoginButtonClick={ this.onLoginButtonClick }\n              loading={ loading }\n            />\n            ) }\n          >\n            {redirect && <Redirect to=\"/search\" /> }\n          </Route>\n          <Route exact path=\"/search\" render={ () => <Search /> } />\n          <Route\n            exact\n            path=\"/album/:id\"\n            render={ (props) => (\n              <Album\n                { ...props }\n                musics={ musics }\n                nameAlbum={ nameAlbum }\n                nameArtist={ nameArtist }\n              />\n            ) }\n          />\n          <Route exact path=\"/favorites\" component={ Favorites } />\n          <Route exact path=\"/profile\" component={ Profile } />\n          <Route exact path=\"/profile/edit\" component={ ProfileEdit } />\n          <Route path=\"*\" component={ NotFound } />\n        </Switch>\n      </main>\n    );\n  }\n}\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Content from './components/Content';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <BrowserRouter basename={ process.env.PUBLIC_URL }>\n          <Content />\n        </BrowserRouter>\n      </div>);\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n+ \nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}